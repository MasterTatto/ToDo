{"version":3,"sources":["ButtonForm.tsx","EditSpan.tsx","Todolist.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ButtonForm","props","useState","value","setValue","error","setError","noSpace","trim","TextField","id","label","variant","className","size","onChange","e","currentTarget","onKeyPress","key","addItem","helperText","Button","onClick","color","endIcon","Icon","EditSpan","activeEdit","setactiveEdit","title","autoFocus","onBlur","changeTitle","onDoubleClick","Todolist","liItem","tasks","map","t","isDone","Checkbox","name","checked","changeChecked","addNewTitle","IconButton","aria-label","removeTask","Delete","addNewTitleTodoLists","removeTodo","addTask","filter","addFilterBtn","App","todoListID_1","v1","todoListID_2","todoLists","setTodoLists","setTask","bool","todoID","v","newTask","f","newFilter","tl","idTask","todo","addNewTitleTasks","newTodo","AppBar","position","Toolbar","style","justifyContent","display","alignItems","edge","Typography","Container","fixed","Grid","container","padding","borderRadius","backgroundColor","maxWidth","marginTop","todoListID","spacing","item","Paper","elevation","paddingTop","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.a24a3f75.chunk.js","sourcesContent":["import { Button, Icon, IconButton, TextField } from '@material-ui/core';\r\nimport { Delete, TextFields } from '@material-ui/icons';\r\nimport React, { ChangeEvent, KeyboardEvent, useState } from 'react';\r\n//\r\ntype ButtonFormPropsType = {\r\n\taddItem: (title: string) => void;\r\n};\r\n//\r\nfunction ButtonForm(props: ButtonFormPropsType) {\r\n\tconst [value, setValue] = useState('');\r\n\t//\r\n\tconst [error, setError] = useState(false);\r\n\t//\r\n\tconst noSpace = value.trim();\r\n\t//\r\n\tconst addInputValue = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetValue(e.currentTarget.value);\r\n\t\tsetError(false);\r\n\t};\r\n\t//\r\n\tconst addValueBtn = () => {\r\n\t\tif (noSpace) {\r\n\t\t\tprops.addItem(noSpace);\r\n\t\t\tsetValue('');\r\n\t\t} else {\r\n\t\t\tsetError(true);\r\n\t\t}\r\n\t};\r\n\t//\r\n\tconst addValueEnter = (e: KeyboardEvent<HTMLInputElement>) => {\r\n\t\tif (e.key === 'Enter' && noSpace) {\r\n\t\t\tprops.addItem(noSpace);\r\n\t\t\tsetValue('');\r\n\t\t} else {\r\n\t\t\tsetError(true);\r\n\t\t}\r\n\t};\r\n\t//\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<TextField\r\n\t\t\t\tid='outlined-basic'\r\n\t\t\t\tlabel='Add item...'\r\n\t\t\t\tvariant='outlined'\r\n\t\t\t\tclassName={error ? 'error' : ''}\r\n\t\t\t\tsize={'small'}\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonChange={addInputValue}\r\n\t\t\t\tonKeyPress={addValueEnter}\r\n\t\t\t\terror={error}\r\n\t\t\t\thelperText = {error ? 'Incorrect value' : ''}\r\n\t\t\t/>\r\n\r\n\t\t\t<Button\r\n\t\t\t\tonClick={addValueBtn}\r\n\t\t\t\tvariant='contained'\r\n\t\t\t\tcolor='primary'\r\n\t\t\t\t//   className={classes.button}\r\n\t\t\t\tendIcon={<Icon>send</Icon>}\r\n\t\t\t>\r\n\t\t\t\tsend\r\n\t\t\t</Button>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ButtonForm;\r\n","import { TextField } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\ntype EditSpanPropsType = {\r\n\ttitle: string;\r\n\tchangeTitle: (title: string) => void;\r\n};\r\nfunction EditSpan(props: EditSpanPropsType) {\r\n\tconst [activeEdit, setactiveEdit] = useState(false);\r\n\t//\r\n\tconst [value, setValue] = useState(props.title);\r\n\t//\r\n\tfunction OnActiveEdit() {\r\n\t\tsetactiveEdit(true);\r\n\t}\r\n\t//\r\n\tfunction OffActiveEdit() {\r\n\t\tsetactiveEdit(false);\r\n\t\tprops.changeTitle(value);\r\n\t}\r\n\treturn activeEdit ? (\r\n\t\t<TextField\r\n\t\t\tid='standard-basic'\r\n\t\t\tlabel='Type changes'\r\n\t\t\tvalue={value}\r\n\t\t\tonChange={(e) => setValue(e.currentTarget.value)}\r\n\t\t\tautoFocus\r\n\t\t\tonBlur={OffActiveEdit}\r\n\t\t\tsize={'small'}\r\n\t\t\tonKeyPress={(e) => {\r\n\t\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\t\tsetactiveEdit(false);\r\n\t\t\t\t\tprops.changeTitle(value);\r\n\t\t\t\t}\r\n\t\t\t}}\r\n\t\t/>\r\n\t) : (\r\n\t\t<span onDoubleClick={OnActiveEdit}>{props.title}</span>\r\n\t);\r\n}\r\n\r\nexport default EditSpan;\r\n","import {\r\n\tButton,\r\n\tCheckbox,\r\n\tGrid,\r\n\tIconButton,\r\n\tTypography,\r\n} from '@material-ui/core';\r\nimport React, { ChangeEvent, KeyboardEvent, useState } from 'react';\r\nimport { filterValue } from './App';\r\nimport ButtonForm from './ButtonForm';\r\nimport EditSpan from './EditSpan';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport { Delete } from '@material-ui/icons';\r\n//\r\nexport type TaskType = {\r\n\tid: string;\r\n\ttitle: string;\r\n\tisDone: boolean;\r\n};\r\n\r\ntype PropsType = {\r\n\ttitle: string;\r\n\ttasks: Array<TaskType>;\r\n\tremoveTask: (id: string, todoID: string) => void;\r\n\taddFilterBtn: (v: filterValue, todoID: string) => void;\r\n\taddTask: (v: string, todoID: string) => void;\r\n\tchangeChecked: (id: string, bool: boolean, todoID: string) => void;\r\n\tfilter: string;\r\n\tid: string;\r\n\tremoveTodo: (id: string) => void;\r\n\taddNewTitle: (id: string, title: string, todoID: string) => void;\r\n\taddNewTitleTodoLists: (id: string, title: string) => void;\r\n};\r\n\r\nexport function Todolist(props: PropsType) {\r\n\tconst liItem = props.tasks.map((t) => {\r\n\t\tconst removeTask = () => props.removeTask(t.id, props.id);\r\n\t\t//\r\n\t\tfunction changeTitle(title: string) {\r\n\t\t\tprops.addNewTitle(t.id, title, props.id);\r\n\t\t}\r\n\t\t//\r\n\t\treturn (\r\n\t\t\t<li className={t.isDone ? 'done' : ''} key={t.id}>\r\n\t\t\t\t<Checkbox\r\n\t\t\t\t\tname='checkedB'\r\n\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\tchecked={t.isDone}\r\n\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\tprops.changeChecked(t.id, e.currentTarget.checked, props.id)\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t<EditSpan title={t.title} changeTitle={changeTitle} />\r\n\r\n\t\t\t\t<IconButton aria-label='delete' color='secondary' onClick={removeTask}>\r\n\t\t\t\t\t<Delete />\r\n\t\t\t\t\t{/* <DeleteForeverIcon  /> */}\r\n\t\t\t\t</IconButton>\r\n\t\t\t</li>\r\n\t\t);\r\n\t});\r\n\t//\r\n\tfunction addTask(title: string) {\r\n\t\tprops.addTask(title, props.id);\r\n\t}\r\n\t//\r\n\tfunction editTodolist(title: string) {\r\n\t\tprops.addNewTitleTodoLists(title, props.id);\r\n\t}\r\n\t//\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h3>\r\n\t\t\t\t<EditSpan title={props.title} changeTitle={editTodolist} />{' '}\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\taria-label='delete'\r\n\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\tonClick={() => props.removeTodo(props.id)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Delete />\r\n\t\t\t\t\t{/* <DeleteForeverIcon  /> */}\r\n\t\t\t\t</IconButton>\r\n\t\t\t</h3>\r\n\t\t\t<ButtonForm addItem={addTask} />\r\n\t\t\t<ul>{liItem}</ul>\r\n\t\t\t<div>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tvariant={props.filter === 'all' ? 'contained' : 'text'}\r\n\t\t\t\t\tonClick={() => props.addFilterBtn('all', props.id)}\r\n\t\t\t\t>\r\n\t\t\t\t\tAll\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\tvariant={props.filter === 'active' ? 'contained' : 'text'}\r\n\t\t\t\t\tonClick={() => props.addFilterBtn('active', props.id)}\r\n\t\t\t\t>\r\n\t\t\t\t\tActive\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tcolor='secondary'\r\n\t\t\t\t\tvariant={props.filter === 'completed' ? 'contained' : 'text'}\r\n\t\t\t\t\tonClick={() => props.addFilterBtn('completed', props.id)}\r\n\t\t\t\t>\r\n\t\t\t\t\tCompleted\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import {\r\n\tAppBar,\r\n\tButton,\r\n\tContainer,\r\n\tGrid,\r\n\tIconButton,\r\n\tPaper,\r\n\tToolbar,\r\n\tTypography,\r\n} from '@material-ui/core';\r\n\r\nimport React, { useState } from 'react';\r\nimport { v1 } from 'uuid';\r\nimport './App.css';\r\nimport ButtonForm from './ButtonForm';\r\nimport { TaskType, Todolist } from './Todolist';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport classes from '*.module.css';\r\nexport type filterValue = 'all' | 'active' | 'completed';\r\n\r\ntype TodoListsType = {\r\n\tid: string;\r\n\ttitle: string;\r\n\tfilter: string;\r\n};\r\ntype TasksType = {\r\n\t[key: string]: Array<TaskType>;\r\n};\r\nfunction App() {\r\n\tconst todoListID_1 = v1();\r\n\tconst todoListID_2 = v1();\r\n\t//\r\n\tconst [todoLists, setTodoLists] = useState<Array<TodoListsType>>([\r\n\t\t{ id: todoListID_1, title: 'What to learn', filter: 'all' },\r\n\t\t{ id: todoListID_2, title: 'What to buy', filter: 'all' },\r\n\t]);\r\n\t//\r\n\tconst [tasks, setTask] = useState<TasksType>({\r\n\t\t[todoListID_1]: [\r\n\t\t\t{ id: v1(), title: 'HTML&CSS', isDone: true },\r\n\t\t\t{ id: v1(), title: 'JS', isDone: true },\r\n\t\t\t{ id: v1(), title: 'ReactJS', isDone: false },\r\n\t\t\t{ id: v1(), title: 'Redux', isDone: false },\r\n\t\t\t{ id: v1(), title: 'Git', isDone: false },\r\n\t\t],\r\n\t\t[todoListID_2]: [\r\n\t\t\t{ id: v1(), title: 'cheeps', isDone: false },\r\n\t\t\t{ id: v1(), title: 'milk', isDone: true },\r\n\t\t\t{ id: v1(), title: 'bread', isDone: false },\r\n\t\t],\r\n\t});\r\n\t//\r\n\tfunction changeChecked(id: string, bool: boolean, todoID: string) {\r\n\t\ttasks[todoID] = tasks[todoID].map((t) =>\r\n\t\t\tt.id === id ? { ...t, isDone: bool } : t\r\n\t\t);\r\n\t\tsetTask({ ...tasks });\r\n\t}\r\n\t//\r\n\tfunction addTask(v: string, todoID: string) {\r\n\t\tconst newTask = { id: v1(), title: v, isDone: false };\r\n\t\ttasks[todoID] = [newTask, ...tasks[todoID]];\r\n\t\tsetTask({ ...tasks });\r\n\t}\r\n\t//\r\n\tfunction addFilterBtn(f: filterValue, todoID: string) {\r\n\t\tconst newFilter = todoLists.map((tl) => {\r\n\t\t\tif (tl.id === todoID) {\r\n\t\t\t\treturn { ...tl, filter: f };\r\n\t\t\t} else {\r\n\t\t\t\treturn tl;\r\n\t\t\t}\r\n\t\t});\r\n\t\tsetTodoLists(newFilter);\r\n\t}\r\n\t//\r\n\r\n\t//\r\n\tfunction removeTask(idTask: string, todoID: string) {\r\n\t\ttasks[todoID] = tasks[todoID].filter((f) => {\r\n\t\t\tif (f.id !== idTask) {\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t});\r\n\t\tsetTask({ ...tasks });\r\n\t}\r\n\t//\r\n\tfunction removeTodo(todoID: string) {\r\n\t\tconst todo = todoLists.filter((f) => f.id !== todoID);\r\n\t\tsetTodoLists(todo);\r\n\t}\r\n\t//\r\n\tfunction addTodoLists(title: string) {\r\n\t\tconst todoListID = v1();\r\n\t\tconst newTodoList = {\r\n\t\t\tid: todoListID,\r\n\t\t\ttitle,\r\n\t\t\tfilter: 'all',\r\n\t\t};\r\n\t\tsetTodoLists([newTodoList, ...todoLists]);\r\n\t\tsetTask({ ...tasks, [todoListID]: [] });\r\n\t}\r\n\t//\r\n\tfunction addNewTitleTasks(id: string, title: string, todoID: string) {\r\n\t\ttasks[todoID] = tasks[todoID].map((t) => {\r\n\t\t\tif (t.id === id) {\r\n\t\t\t\treturn { ...t, title: title };\r\n\t\t\t} else {\r\n\t\t\t\treturn t;\r\n\t\t\t}\r\n\t\t});\r\n\t\tsetTask({ ...tasks });\r\n\t}\r\n\t//\r\n\tfunction addNewTitleTodoLists(title: string, todoID: string) {\r\n\t\tconst newTodo = todoLists.map((t) => {\r\n\t\t\tif (t.id === todoID) {\r\n\t\t\t\treturn { ...t, title };\r\n\t\t\t} else {\r\n\t\t\t\treturn t;\r\n\t\t\t}\r\n\t\t});\r\n\t\tsetTodoLists(newTodo);\r\n\t}\r\n\t//\r\n\r\n\treturn (\r\n\t\t<div className='App'>\r\n\t\t\t<AppBar position='static'>\r\n\t\t\t\t<Toolbar style={{ justifyContent: 'space-between' }}>\r\n\t\t\t\t\t<div style={{ display: 'flex', alignItems: 'center' }}>\r\n\t\t\t\t\t\t<IconButton edge='start' color='inherit' aria-label='menu'>\r\n\t\t\t\t\t\t\t<MenuIcon />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t<Typography variant='h6'>News</Typography>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Button color='inherit'>Login</Button>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\r\n\t\t\t<Container fixed>\r\n\t\t\t\t<Grid\r\n\t\t\t\t\tcontainer\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tpadding: '20px',\r\n\t\t\t\t\t\tborderRadius: '20px',\r\n\t\t\t\t\t\tbackgroundColor: 'rgba(255, 255, 255, 0.9)',\r\n\t\t\t\t\t\tmaxWidth:'345px',\r\n\t\t\t\t\t\tmarginTop:'20px'\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ButtonForm addItem={addTodoLists} />\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t\t<Grid container spacing={4} >\r\n\t\t\t\t\t{todoLists.map((tl) => {\r\n\t\t\t\t\t\tfunction windowTask() {\r\n\t\t\t\t\t\t\tif (tl.filter === 'active') {\r\n\t\t\t\t\t\t\t\treturn tasks[tl.id].filter((f) => f.isDone === false);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (tl.filter === 'completed') {\r\n\t\t\t\t\t\t\t\treturn tasks[tl.id].filter((f) => f.isDone === true);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn tasks[tl.id];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t\t<Paper\r\n\t\t\t\t\t\t\t\t\t\televation={3}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tpadding: '20px',\r\n\t\t\t\t\t\t\t\t\t\t\tpaddingTop:'0',\r\n\t\t\t\t\t\t\t\t\t\t\tborderRadius: '20px',\r\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: 'rgba(255, 255, 255, 0.9)',\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop:'20px'\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Todolist\r\n\t\t\t\t\t\t\t\t\t\t\tkey={tl.id}\r\n\t\t\t\t\t\t\t\t\t\t\tid={tl.id}\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={tl.title}\r\n\t\t\t\t\t\t\t\t\t\t\ttasks={windowTask()}\r\n\t\t\t\t\t\t\t\t\t\t\tremoveTask={removeTask}\r\n\t\t\t\t\t\t\t\t\t\t\taddFilterBtn={addFilterBtn}\r\n\t\t\t\t\t\t\t\t\t\t\taddTask={addTask}\r\n\t\t\t\t\t\t\t\t\t\t\tchangeChecked={changeChecked}\r\n\t\t\t\t\t\t\t\t\t\t\tfilter={tl.filter}\r\n\t\t\t\t\t\t\t\t\t\t\tremoveTodo={removeTodo}\r\n\t\t\t\t\t\t\t\t\t\t\taddNewTitle={addNewTitleTasks}\r\n\t\t\t\t\t\t\t\t\t\t\taddNewTitleTodoLists={addNewTitleTodoLists}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</Grid>\r\n\t\t\t</Container>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />,  document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}